$columnsNumber: 12 !default;
$gutter-width: 16px !default;
$outer-margin: 32px !default;
$xs-min: 0rem !default;
$sm-min: 576px !default;
$md-min: 768px !default;
$lg-min: 992px !default;
$xl-min: 1200px !default;
$gutter-compensation: ($gutter-width * 0.5 * -1);
$half-gutter-width: ($gutter-width * 0.5);
$xsViewport: "only screen";
$smViewport: "only screen and (min-width: #{$sm-min})";
$mdViewport: "only screen and (min-width: #{$md-min})";
$lgViewport: "only screen and (min-width: #{$lg-min})";
$xlViewport: "only screen and (min-width: #{$xl-min})";
$xsOnly: "only screen and (max-width: #{$sm-min - 1})";
$smOnly: "only screen and (min-width: #{$sm-min}) and (max-width: #{$md-min - 1})";
$mdOnly: "only screen and (min-width: #{$md-min}) and (max-width: #{$lg-min - 1})";
$lgOnly: "only screen and (min-width: #{$lg-min}) and (max-width: #{$xl-min - 1})";
$xlOnly: "only screen and (min-width: #{$xl-min})";
.container {
  box-sizing: border-box;
  margin-left: auto;
  margin-right: auto;
  padding-right: 8px;
  padding-left: 8px;
}

.container-fluid {
  padding-right: $gutter-width;
  padding-left: $gutter-width;
}

.row {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
}

.row.reverse {
  flex-direction: row-reverse;
}

.col.reverse {
  flex-direction: column-reverse;
}

@mixin basic-column {
  box-sizing: border-box;
  flex: 0 0 auto;
  flex-basis: 100%;
  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
  max-width: 100%;
}

@for $i from 1 through $columnsNumber {
  .col-xs-#{$i} {
    @include basic-column();
    flex-basis: ($i * 100% / $columnsNumber);
    max-width: ($i * 100% / $columnsNumber);
  }
  .col-xs-offset-#{$i} {
    margin-left: ($i * 100% / $columnsNumber);
  }
}

@mixin auto-column {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

.col-xs {
  @include auto-column();
}

@media #{$smViewport} {
  .container {
    width: ($sm-min - $gutter-width);
    max-width: 100%;
  }
  .col-sm {
    @include basic-column();
    @include auto-column();
  }
  @for $i from 1 through $columnsNumber {
    .col-sm-#{$i} {
      @include basic-column();
      flex-basis: ($i * 100% / $columnsNumber);
      max-width: ($i * 100% / $columnsNumber);
    }
    .col-sm-offset-#{$i - 1} {
      @include basic-column();
      margin-left: (($i - 1) * 100% / $columnsNumber);
    }
  }
}

@media #{$mdViewport} {
  .container {
    width: ($md-min - $gutter-width);
    max-width: 100%;
  }
  .col-md {
    @include basic-column();
    @include auto-column();
  }
  @for $i from 1 through $columnsNumber {
    .col-md-#{$i} {
      @include basic-column();
      flex-basis: ($i * 100% / $columnsNumber);
      max-width: ($i * 100% / $columnsNumber);
    }
    .col-md-offset-#{$i - 1} {
      @include basic-column();
      margin-left: (($i - 1) * 100% / $columnsNumber);
    }
  }
}

@media #{$lgViewport} {
  .container {
    width: ($lg-min - $gutter-width);
    max-width: 100%;
  }
  .col-lg {
    @include basic-column();
    @include auto-column();
  }
  @for $i from 1 through $columnsNumber {
    .col-lg-#{$i} {
      @include basic-column();
      flex-basis: ($i * 100% / $columnsNumber);
      max-width: ($i * 100% / $columnsNumber);
    }
    .col-lg-offset-#{$i - 1} {
      @include basic-column();
      margin-left: (($i - 1) * 100% / $columnsNumber);
    }
  }
}

@media #{$xlViewport} {
  .container {
    width: ($xl-min - $gutter-width);
    max-width: 100%;
  }
  .col-xl {
    @include basic-column();
    @include auto-column();
  }
  @for $i from 1 through $columnsNumber {
    .col-xl-#{$i} {
      @include basic-column();
      flex-basis: ($i * 100% / $columnsNumber);
      max-width: ($i * 100% / $columnsNumber);
    }
    .col-xl-offset-#{$i - 1} {
      @include basic-column();
      margin-left: (($i - 1) * 100% / $columnsNumber);
    }
  }
}

@each $ss,
$vp in (xs, $xsViewport),
(sm, $smViewport),
(md, $mdViewport),
(lg, $lgViewport),
(xl, $xlViewport) {
  @media #{$vp} {
    .start-#{$ss} {
      justify-content: flex-start;
      text-align: start;
    }
    .center-#{$ss} {
      justify-content: center;
      text-align: center;
    }
    .end-#{$ss} {
      justify-content: flex-end;
      text-align: end;
    }
    .top-#{$ss} {
      align-items: flex-start;
    }
    .middle-#{$ss} {
      align-items: center;
    }
    .bottom-#{$ss} {
      align-items: flex-end;
    }
    .around-#{$ss} {
      justify-content: space-around;
    }
    .between-#{$ss} {
      justify-content: space-between;
    }
    .first-#{$ss} {
      order: -1;
    }
    .last-#{$ss} {
      order: 1;
    }
    .initial-order-#{$ss} {
      order: initial;
    }
  }
}

@media #{$xsOnly} {
  .hidden-xs {
    display: none;
  }
}

@media #{$smOnly} {
  .hidden-sm {
    display: none;
  }
}

@media #{$mdOnly} {
  .hidden-md {
    display: none;
  }
}

@media #{$lgOnly} {
  .hidden-lg {
    display: none;
  }
}

@media #{$xlOnly} {
  .hidden-xl {
    display: none;
  }
}